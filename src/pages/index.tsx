import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/LoadingSpinner";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  const { profileImageUrl, firstName } = user;

  return (
    <div className="flex w-full gap-4">
      <Avatar src={profileImageUrl} name={firstName} />
      <input
        className="grow bg-transparent outline-none"
        type="text"
        placeholder="Type in some emojis!"
      />
    </div>
  );
};

const Avatar: React.FC<{ src?: string | null; name: string | null }> = ({
  src,
  name,
}) => {
  if (!src) return null;
  return (
    <Image
      className="h-14 w-14 rounded-full"
      src={src}
      alt={`${name ?? "user"} profile picture`}
      width={56}
      height={56}
    />
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];
const PostView: React.FC<{ post: PostWithAuthor }> = ({ post }) => {
  return (
    <div className="flex gap-3 border-b border-slate-400 p-4" key={post.id}>
      <Avatar src={post.author.profileImageUrl} name={post.author.firstName} />
      <div className="flex flex-col">
        <span className="text-slate-400">
          <span>{post.author.username || post.author.firstName}</span>
          <span className="mx-2">Â·</span>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </span>
        <p>{post.content}</p>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;
  return (
    <div className="flex flex-col">
      {data?.map((post) => (
        <PostView key={post.id} post={post} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userIsLoaded, isSignedIn } = useUser();

  if (!userIsLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && <SignInButton />}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
